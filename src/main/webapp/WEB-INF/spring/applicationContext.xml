<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!--Ensures that annotations are detected and read throughout the project's 
		bean classes -->
	<context:annotation-config />
	<!--Advanced support for webapp-specific (Spring MVC) controller annotations -->
	<mvc:annotation-driven />

	<!--Scans the classpath of the webapp for @Components to be deployed as 
		Spring beans -->
	<context:component-scan base-package="com.neemre.hashly" />
	
	<!--Configures a handler for serving static resources such as images, js 
		and css files -->
	<mvc:resources location="/static/css/" mapping="/static/css/**" />
	<mvc:resources location="/static/img/" mapping="/static/img/**" />
	<mvc:resources location="/static/js/" mapping="/static/js/**" />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/src/main/resources/db.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="minPoolSize" value="${db.minPoolSize}" />
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<property name="unreturnedConnectionTimeout" value="${db.unreturnedConnectionTimeout}" />
		<property name="acquireIncrement" value="${db.acquireIncrement}" />
		<property name="autoCommitOnClose" value="${db.autoCommitOnClose}" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jsonMessageConverter" 
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	
	<bean id="reqMappingAdapter" 
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!--Configures InternalResourceViewResolver as the application's view resolver -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="loggingAspect" class="com.neemre.hashly.common.aop.LoggingAspect" />
	<aop:aspectj-autoproxy>
		<aop:include name="loggingAspect" />
	</aop:aspectj-autoproxy>

</beans>